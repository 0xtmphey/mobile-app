buildscript {
    ext.kotlin_version = "${libs.versions.kotlin.get()}"

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath libs.gradle
        classpath libs.kgp
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.multiplatform apply false
    alias libs.plugins.android.kotlin apply false
    alias libs.plugins.androidx.room apply false
    alias libs.plugins.kapt apply false
    alias libs.plugins.ksp apply false
    alias libs.plugins.serialization apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }

        maven {
            url = "https://maven.pkg.github.com/pebble-dev/libpebblecommon"
            credentials {
                Properties properties = new Properties()
                if (rootProject.file('local.properties').canRead()) {
                    properties.load(rootProject.file("local.properties").newDataInputStream())
                }

                // Set in local.properties
                username = System.getenv("GITHUB_ACTOR") != null ? System.getenv("GITHUB_ACTOR") : properties.getProperty("GITHUB_ACTOR", null)
                // github username
                password = System.getenv("GITHUB_TOKEN") != null ? System.getenv("GITHUB_TOKEN") : properties.getProperty("GITHUB_TOKEN", null)
                // personal access token
                if (username == null || password == null) throw new GradleScriptException("Set github username and token in local.properties! (GITHUB_ACTOR and GITHUB_TOKEN)", null)
            }
        }

        mavenLocal()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
